#!/bin/bash

UpdateWorkspace() {

	# Get the workspace status
	id=$(bspc query -D -d $1 --names)
	occupied=$(bspc query -D -d "$1.occupied" &> /dev/null && echo "true" || echo "false")
	active=$(bspc query -D -d "$1.active" &> /dev/null && echo "true" || echo "false")

	# Update workspace icons
	if [[ "$active" == "true" ]] ; then
		eww update workspace"$id"_icon=
	else
		eww update workspace"$id"_icon=
	fi

	# Update workspace colors
	if [[ "$occupied" == "true" ]] ; then
		eww update workspace"$id"_class=workspace_occupied
	elif [[ "$active" == "true" ]]; then
		eww update workspace"$id"_class=workspace_occupied
	else
		eww update workspace"$id"_class=workspace_unoccupied
	fi

}

# Get the monitor1
monitor1=$(bspc query -M -m \^1)

# Remember the current workspaces as the old ones
monitor1_last_focused_workspace=$(bspc query -D -m \^1 -d focused --names)
monitor2_last_focused_workspace=$(bspc query -D -m \^2 -d focused --names)

bspc subscribe desktop node_transfer | while read -r line ; do

	# If we changed workspace do:
	if [[ $(echo "$line" | awk '{print $1}') == "desktop_focus" ]]; then

		# Get the current workspace and update it
		focused_workspace=$(echo "$line" | awk '{print $3}')
		UpdateWorkspace $focused_workspace

		# If we changed to a monitor1 workspace, update the old monitor1 workspace and remember the current workspace as the old one 
		if [[ $(echo "$line" | awk '{print $2}') == "$monitor1" ]]; then
			UpdateWorkspace $monitor1_last_focused_workspace
			monitor1_last_focused_workspace=$focused_workspace

		# Otherwise do that for monitor2
		else
			UpdateWorkspace $monitor2_last_focused_workspace
			monitor2_last_focused_workspace=$focused_workspace
		fi

	# If we transferd a node, update the destination workspace
	else
		UpdateWorkspace $(echo "$line" | awk '{print $6}')
	fi

done
