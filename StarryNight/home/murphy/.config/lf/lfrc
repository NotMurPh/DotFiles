#!/bin/bash

# Basic settings

set hidden
set ignorecase
set icons
set sortby ext 
set info size
set cursorpreviewfmt "\033[7m"

# Key mapping

map t touch
map u push :unselect<enter>:clear<enter>
map <enter> open
map <delete> delete
map D delete
map m mkdir
map a zip
map x extract
map c compress-video
map C cut-video

# Custom functions

cmd mkdir %{{
    echo " mkdir: "; read file
    mkdir "$file"
}}

cmd touch %{{
    echo " touch: "; read file
    touch "$file"
	chmod +x "$file"
}}

cmd zip &{{
    set -f
    mkdir Archive
	IFS=$'\n'
	for file in $fx; do 
		cp -r "$file" Archive
	done
    zip -r Archive.zip Archive
    rm -rf Archive
}}

cmd extract ${{
    set -f
	IFS=$'\n'
	for file in $fx; do 
		case $file in
			*.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$file";;
			*.tar.gz|*.tgz) tar xzvf "$file";;
			*.tar.xz|*.txz) tar xJvf "$file";;
			*.tar) tar xvf "$file";;
			*.zip) unzip "$file";;
			*.rar) unrar x "$file";;
			*.7z) 7z x "$file";;
		esac
	done
}}

cmd compress-video %{{
    set -f
	IFS=$'\n'
    for file in $fx ; do
        ffmpeg -i "$file" -c:v libx265 -crf 32 Compressed_$(basename "$file")
    done
}}

cmd cut-video %{{
	set -f
	echo " start: "; read start
	echo " end: "; read end

	start=${start:-0}
	if [[ "$end" == "0" || "$end" == "" ]] ; then
		end=$(ffprobe -i "$f" -show_entries format=duration -v quiet -of csv="p=0")
	fi

	ffmpeg -i "$f" -ss "$start" -to "$end" -c:v copy -c:a copy "Cutted_$(basename "$f")"
}}

# Integrations

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
cmd on-quit ${{
	pkill -f "ctpv -s $id"
	pkill -f "ctpvquit -s $id"
}}
