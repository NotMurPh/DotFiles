# Basic settings

set hidden
set ignorecase
set icons
set sortby ext 
set info size
set cursorpreviewfmt "\033[7m"

# Key mapping

map t touch
map u push :unselect<enter>:clear<enter>
map <enter> open
map <delete> delete
map D delete
map m mkdir
map a zip
map x extract
map c compress-video
map C cut-video

# Custom functions

cmd mkdir %{{
    echo " mkdir: "
    read name
    mkdir $name
}}

cmd touch %{{
    echo " touch: "
    read name
    touch $name
}}

cmd zip ${{
    set -f
    mkdir Archive
    cp -r "$fx" Archive
    zip -r Archive.zip Archive
    rm -rf Archive
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
		*.tar) tar xvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd compress-video %{{
    for name in $fx ; do
        ffmpeg -i $name -vf "scale=trunc(iw/4)*2:trunc(ih/4)*2" -c:v libx265 -crf 28 Compressed_$(basename $name) &
    done
}}

cmd cut-video %{{
	echo " start: "
	read start
	echo " end: "
	read end

	if [[ $end == "0" || $end == "" ]] ; then
		end=$(ffprobe -i $f -show_entries format=duration -v quiet -of csv="p=0")
	fi
	ffmpeg -i $f -ss $start -to $end -c:v copy -c:a copy Cutted_$(basename $f) &
}}

# Integrations

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id
cmd on-quit ${{
	pkill -f "ctpv -s $id"
	pkill -f "ctpvquit -s $id"
}}
